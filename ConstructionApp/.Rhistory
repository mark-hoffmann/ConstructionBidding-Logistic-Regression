test <- sqldf("Select * FROM first WHERE Team = 'West Ham United'")
test <- sqldf("Select * FROM first WHERE Team = 'West Ham United '")
test <- sqldf("Select * FROM first WHERE 'Games.Drawn' > 0")
View(test)
first <- read.csv("/Users/MarkHoffmann/Google Drive/Soccer Stats/OptaData/08-18-2015--1.csv",strip.white=TRUE)
second <- read.csv("/Users/MarkHoffmann/Google Drive/Soccer Stats/OptaData/08-18-2015--2.csv",strip.white=TRUE)
firstandsecond <- sqldf("SELECT * FROM first second WHERE 'first.Match' = 'second.Match'")
test <- sqldf("Select * FROM first WHERE 'Team' = 'West Ham United'")
test <- sqldf("Select * FROM first WHERE 'Team' = 'West Ham United'")
test <- sqldf("Select * FROM first WHERE 'Team' = 'West Ham United '")
View(first)
test <- sqldf("Select * FROM first WHERE Team = 'Hull City'")
test <- sqldf("Select * FROM first WHERE Team = 'West Ham United'")
combined <- merge(first, second)
View(combined)
Sys.Date()
fd = 5
fd <- 5
dd <- 5
first <- read.csv(paste0("/Users/MarkHoffmann/Google Drive/Soccer Stats/OptaData/",date,"--1"),strip.white=TRUE)
first <- read.csv(cat("/Users/MarkHoffmann/Google Drive/Soccer Stats/OptaData/",date,"--1",sep=""),strip.white=TRUE)
dated = "08-18-2015"
first <- read.csv(cat("/Users/MarkHoffmann/Google Drive/Soccer Stats/OptaData/",dated,"--1",sep=""),strip.white=TRUE)
first <- read.csv(cat("/Users/MarkHoffmann/Google Drive/Soccer Stats/OptaData/",dated,"--1",),strip.white=TRUE)
first <- read.csv(cat("/Users/MarkHoffmann/Google Drive/Soccer Stats/OptaData/",dated,"--1"),strip.white=TRUE)
first <- read.csv(cat("/Users/MarkHoffmann/Google Drive/Soccer Stats/OptaData/",dated,"--1", sep=""),strip.white=TRUE)
st = cat("/Users/MarkHoffmann/Google Drive/Soccer Stats/OptaData/",dated,"--1", sep="")
st = paste("/Users/MarkHoffmann/Google Drive/Soccer Stats/OptaData/",dated,"--1", sep="")
first <- read.csv(paste("/Users/MarkHoffmann/Google Drive/Soccer Stats/OptaData/",dated,"--1", sep=""),strip.white=TRUE)
first <- read.csv(st,strip.white=TRUE)
st = paste("/Users/MarkHoffmann/Google Drive/Soccer Stats/OptaData/",dated,"--1.csv", sep="")
first <- read.csv(st,strip.white=TRUE)
fileNum = 1
st = paste("/Users/MarkHoffmann/Google Drive/Soccer Stats/OptaData/",dated,"--",fileNum,".csv", sep="")
first <- read.csv(st,strip.white=TRUE)
fileNum ++
fileNum += 1
fileNum += 1
fileNum + 1
fileNum
fileNum = fileNum + 1
1 <- read.csv(st,strip.white=TRUE)
f1 <- read.csv(st,strip.white=TRUE)
dated = "08-18-2015"
fileNum = 1
for (fileNum in 1:17 ) {
st = paste("/Users/MarkHoffmann/Google Drive/Soccer Stats/OptaData/",dated,"--",fileNum,".csv", sep="")
assign(paste("f", fileNum, sep = ""), read.csv(st,strip.white=TRUE))
}
View(f2)
View(f16)
View(f14)
for (index in 1:16){
combined <- merge(paste("f", index, sep=""), paste("f", index+1, sep=""), all = TRUE)
}
View(combined)
combined <- merge(paste("f", 1, sep=""), paste("f", 2, sep=""), all = TRUE)
one = paste("f", 1, sep="")
two = paste("f", 2, sep="")
combined <- merge(one, two, all = TRUE)
combined <- merge(f1, f2, all = TRUE)
combined <- merge(data one, f2, all = TRUE)
combined <- merge(f1, f2, all = TRUE)
mergeStatement = paste("merge(",one,",",two,", all=TRUE)", sep="")
combined <- mergeStatement
combined <- eval(mergeStatement)
combined <- match.fun(mergeStatement)
combined <- do.call(mergeStatement)
combined <- do.call(mergeStatement,)
combined <- do.call(merge,one,two)
combined <- do.call(merge,list(one,two)
)
combined <- do.call(merge,list(one,two))
combined <- do.call(merge,list(f1,f2))
combined <- merge(eval(parse(text = "one")),eval(parse(text = "two")), all = TRUE)
eval(parse(text = "one"))
combined <- merge(as.name(one),as.name(two), all = TRUE)
combined <- do.call(merge,list(one,two))
combined <- do.call(merge,list(eval(one),eval(two))
combined <- merge(f1,f2, all=TRUE)
combined <- merge(f1,f2, all=TRUE)
combined <- merge(combined, f3, all=TRUE)
combined <- merge(combined, f4, all=TRUE)
combined <- merge(combined, f5, all=TRUE)
combined <- merge(combined, f6, all=TRUE)
combined <- merge(combined, f7, all=TRUE)
combined <- merge(combined, f8, all=TRUE)
combined <- merge(combined, f9, all=TRUE)
combined <- merge(combined, f10, all=TRUE)
combined <- merge(combined, f11, all=TRUE)
combined <- merge(combined, f12, all=TRUE)
combined <- merge(combined, f13, all=TRUE)
combined <- merge(combined, f14, all=TRUE)
combined <- merge(combined, f15, all=TRUE)
combined <- merge(combined, f16, all=TRUE)
combined <- merge(combined, f17, all=TRUE)
View(combined)
combined.to_csv("/Users/MarkHoffmann/Google Drive/Soccer Stats/OptaData/combined.csv", sep=',')
install.packages("Pandas")
install.packages("pandas")
write.csv(combined, file = "/Users/MarkHoffmann/Google Drive/Soccer Stats/OptaData/combined.csv")
out = paste("/Users/MarkHoffmann/Google Drive/Soccer Stats/OptaData/combined",dated,".csv", sep="")
write.csv(combined, file = out)
out = paste("/Users/MarkHoffmann/Google Drive/Soccer Stats/OptaData/combined--",dated,".csv", sep="")
write.csv(combined, file = out)
file.remove("/Users/MarkHoffmann/Google Drive/Soccer Stats/OptaData/combined.csv")
for (fileNum in 1:17 ) {
st = paste("/Users/MarkHoffmann/Google Drive/Soccer Stats/OptaData/",dated,"--",fileNum,".csv", sep="")
file.remove(st)
}
data <- read.csv(file="/Users/MarkHoffmann/Desktop/file.csv",sep=""), header=TRUE, sep=",")
data <- read.csv(file="/Users/MarkHoffmann/Desktop/file.csv" sep=""), header=TRUE, sep=",")
data <- read.csv(file="/Users/MarkHoffmann/Desktop/file.csv"), header=TRUE, sep=",")
data <- read.csv(file="/Users/MarkHoffmann/Desktop/file.csv" header=TRUE, sep=",")
data <- read.csv(file="/Users/MarkHoffmann/Desktop/file.csv", header=TRUE, sep=",")
View(data)
colnames(data)
for(name in colnames(data)){
print name
}
for(name in colnames(data)){
print "hello"
}
list = [1,2,3,4]
for(name in list){
print "hello"
}
}
}]
data <- read.csv(file="/Users/MarkHoffmann/Desktop/file.csv", header=TRUE, sep=",")
colnames(data)
list = [1,2,3,4]
for(name in list){
print "hello"
}
[]{}
colnames(data)
list = [1,2,3,4]
for(name in list){
print "hello"
}
for(name in list){
print "hello"
}
""
"
""
for(name in list){
print "hello"
}
print list
print "hello"
print "hello"
hello
"hello"
"hello"
print list
print "hello"
print hello
print 'hello'
data <- read.csv(file="/Users/MarkHoffmann/Desktop/file.csv", header=TRUE, sep=",")
colnames(data)
list = [1,2,3,4]
for(name in list){
print "hello"
}
list = list(1,2,3,4)
for(name in list){
print "hello"
}
for(name in list){
print name
}
for(name in 1:length(list)){
print "hello"
}
list = data.frame(1,2,3,4)
for(name in 1:length(list)){
print "hello"
}
for(name in 1:10){
print "hello"
}
f
for(name in 1:10)
{
print "hello"
}
for(name in 1:10)
{
print 'hello'
}
for(name in 1:10)
{
# print 'hello'
}
for(name in 1:10)
{
print name
}
for(name in 1:10)
{
print name;
}
for(name in 1:10)
{
k = name
}
for(name in 1:10)
{
print("hello")
}
for(name in list)
{
print("hello")
}
for(name in colnames(data))
{
print(name)
}
apply(data, 2, function(x)length(unique(x)))
lapply(data, 2, function(x)length(unique(x)))
test <- apply(data, 2, function(x)length(unique(x)))
test
test[1]
test[[1]]
test[[[1]]]
for(name in colnames(data))
{
print(name)
}
for(name in colnames(data))
{
print(name)
}
for(name in test){
if(name[[]] > 10){
print(name)
}
}
for(name in test){
if(name > 10){
print(name)
}
}
for(name in test){
if(name < 10){
print(name)
}
}
name
test
unique(data)
length(unique(data))
test = length(unique(data))
test
test[1]
test[2]
test = function(x)length(unique(data))
test
ddply(data,~name,summarise,number_of_distinct_orders=length(unique(order_no)))
install.packages("plyr")
ddply(data,~name,summarise,number_of_distinct_orders=length(unique(order_no)))
food=read.csv("http://www4.ncsu.edu/~slrace/LinearAlgebra2016/Code/ukfood.csv", header=TRUE,row.names=1)
food=as.data.frame(t(food))
head(food)
food=data.frame(food)
pca=prcomp(food)
plot(pca)
summary(pca)
food
food$Cheese
pca$rotation
plot(pca$x)
text(pca$x[,1], pca$x[,2],row.names(food))
biplot(pca)
setwd("/Users/MarkHoffmann/Desktop/NCSUAnalytics/Fall1/LinearAlgebra/SVD")
install.packages("pixmap",repos="http://R-Forge.R-project.org")
install.packages("pixmap")
library(pixmap)
system("convert rappa.jpg rappa.ppm")
rappa = read.pnm("rappa.ppm")
#Show the type of the information contained in our data:
str(rappa)
rappa@size
rappa.red=rappa@red
rappa.green=rappa@green
rappa.blue=rappa@blue
image(rappa.green)
image(rappa.red)
image(rappa.blue)
image(rappa.green)
rappa.green=t(rappa.green)[,nrow(rappa.green):1]
image(rappa.green)
greyrappa = read.pnm("rappa.pgm")
str(greyrappa)
rappa.grey=greyrappa@grey
#again, rotate 90 degrees
rappa.grey=t(rappa.grey)[,nrow(rappa.grey):1]
image(rappa.grey, col=grey((0:1000)/1000))
rappasvd=svd(rappa.grey)
U=rappasvd$u
d=rappasvd$d
Vt=t(rappasvd$v)
str(rappasvd)
rappaR3=U[ ,1:3]%*%diag(d[1:3])%*%Vt[1:3, ]
image(rappaR3, col=grey((0:1000)/1000))
rappaR10=U[ ,1:10]%*%diag(d[1:10])%*%Vt[1:10, ]
image(rappaR10, col=grey((0:1000)/1000))
rappaR25=U[ ,1:25]%*%diag(d[1:25])%*%Vt[1:25, ]
image(rappaR25, col=grey((0:1000)/1000))
d[140:160]
rappa_bad25=U[ ,135:160]%*%diag(d[135:160])%*%Vt[135:160, ]
image(rappa_bad25, col=grey((0:1000)/1000))
rappa_bad50=U[ ,110:160]%*%diag(d[110:160])%*%Vt[110:160, ]
image(rappa_bad50, col=grey((0:1000)/1000))
rappa_bad100=U[ ,61:160]%*%diag(d[61:160])%*%Vt[61:160, ]
image(rappa_bad100, col=grey((0:1000)/1000))
library("shiny")
install.packages("shiny")
library("shiny")
install.packages("shinythemes")
library("shiny")
library(shinythemes)
shinyApp(
ui = fluidPage(theme = shinytheme("united"),
...
),
server = function(input, output) { }
)
library("shiny")
library(shinythemes)
shinyApp(
ui = fluidPage(theme = shinytheme("united"),
sliderInput(inputId = "num",label = "Choose a number",value = 25, min=1,max=100)
),
server = function(input, output) { }
)
library("shiny")
library(shinythemes)
shinyApp(
ui = fluidPage(theme = shinytheme("united"),
sliderInput(inputId = "num",label = "Choose a number",value = 25, min=1,max=100)
),
server = function(input, output) { }
)
library("shiny")
library(shinythemes)
shinyApp(
ui = fluidPage(theme = shinytheme("united"),
titlePanel("AL & AL Construction Model"),
selectInput("variable", "Variable:",
c("Cylinders" = "cyl",
"Transmission" = "am",
"Gears" = "gear")),
sliderInput(inputId = "num",label = "Choose a number",value = 25, min=1,max=100)
),
server = function(input, output) { }
)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='markhoffmann', token='1FA0028062AF5ADD8A246878ACB64F00', secret='8fgdXm5jsAvFWtWbBHGBG2Wd7zBFAPBU8g50xhGv')
shiny::runApp('~/Desktop/ConstructionApp')
shiny::runApp('~/Desktop/ConstructionApp')
shiny::runApp('~/Desktop/ConstructionApp')
shiny::runApp('~/Desktop/ConstructionApp')
shiny::runApp('~/Desktop/ConstructionApp')
input.data <- read.csv("Construction.csv")
input.data <- read.csv(paste(getwd(),"Construction.csv",sep="") )
setwd("~/Desktop/ConstructionApp")
input.data <- read.csv("Construction.csv")
data.summary()
data$summary
data.summary
summary(data)
summary(data())
data
input.data
str(input.data)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(shinyapps)
shinyapps::deployApp('/Users/MarkHoffmann/Desktop/NCSUAnalytics/Fall1/LogisticRegression/FinalProject/ConstructionApp')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(shinyapps)
shinyapps::deployApp('/Users/MarkHoffmann/Desktop/NCSUAnalytics/Fall1/LogisticRegression/FinalProject/ConstructionApp')
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(shinyapps)
shinyapps::deployApp('/Users/MarkHoffmann/Desktop/NCSUAnalytics/Fall1/LogisticRegression/FinalProject/ConstructionApp')
shiny::runApp()
shiny::runApp()
library(shinyapps)
shinyapps::deployApp('/Users/MarkHoffmann/Desktop/NCSUAnalytics/Fall1/LogisticRegression/FinalProject/ConstructionApp')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(shinyapps)
shinyapps::deployApp('/Users/MarkHoffmann/Desktop/NCSUAnalytics/Fall1/LogisticRegression/FinalProject/ConstructionApp')
library(shinyapps)
shinyapps::deployApp('/Users/MarkHoffmann/Desktop/NCSUAnalytics/Fall1/LogisticRegression/FinalProject/ConstructionApp')
library(shinyapps)
shinyapps::deployApp('/Users/MarkHoffmann/Desktop/NCSUAnalytics/Fall1/LogisticRegression/FinalProject/ConstructionApp')
shiny::runApp()
shiny::runApp()
library(shinyapps)
shinyapps::deployApp('/Users/MarkHoffmann/Desktop/NCSUAnalytics/Fall1/LogisticRegression/FinalProject/ConstructionApp')
